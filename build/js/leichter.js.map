{"version":3,"sources":["webpack:///webpack/bootstrap 71b0eec1779d118ae7fc","webpack:///./lib/leichter.js","webpack:///./lib/ignition/ignite_python_code.js","webpack:///./lib/ignition/lexer/lex_python.js","webpack:///./lib/ignition/char_mapping/python.js","webpack:///./lib/ignition/keywords/python.js","webpack:///./lib/ignition/parser/parse_python.js","webpack:///./lib/ignition/ignite_ruby_code.js","webpack:///./lib/ignition/lexer/lex_ruby.js","webpack:///./lib/ignition/parser/parse_ruby.js","webpack:///./lib/ignition/ignite_html_code.js","webpack:///./lib/ignition/lexer/lex_html.js","webpack:///./lib/ignition/char_mapping/html.js","webpack:///./lib/ignition/parser/parse_html.js","webpack:///./lib/ignition/keywords/html.js","webpack:///./lib/helpers/append_node.js"],"names":["appendNode","require","module","exports","options","lang","element","enableEscapedCharacter","document","getElementById","codeString","innerText","console","warn","ignite","ignitePythonCode","lexPython","parsePython","className","lexedTokens","tokens","token","codeSegment","createElement","type","value","appendChild","stringElements","getElementsByClassName","e","string","result","char","i","l","length","innerHTML","K","String","prototype","last","Array","includes","item","indexOf","code","currentChar","peekChar","charPosition","lexedValue","readChar","readString","lexedString","stringClosing","join","push","readSpace","spaces","readComment","commentString","undefined","tokenizeLexedValue","Object","keys","slice","set","has","get","log","$charMap","Map","$keyword","$function","$logical","$boolean","$nullity","tokenPosition","currentToken","peekToken","nextToken","parseArray","isNaN","parseArgumentTokens","igniteRubyCode","lexRuby","parseRuby","$keywords","$functions","peekTokenIs","tokenizeArguments","tokenizeClassScope","isGlobalVariable","igniteHTMLCode","innerToken","innerCodeSegment","lexHTML","targetTokenStack","readTag","tagTokens","$tagCharMap","parseHTML","peekInnerToken","$tags","params","child","name","classList","id","attributes","key","setAttribute","children","grandChildInfo"],"mappings":"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","file":"leichter.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 71b0eec1779d118ae7fc","const appendNode = require('./helpers/append_node.js').appendNode\n\nimport ignitePythonCode from './ignition/ignite_python_code'\nimport igniteRubyCode   from './ignition/ignite_ruby_code'\nimport igniteHTMLCode   from './ignition/ignite_html_code'\n\nmodule.exports = class Leichter {\n  constructor(options = {}) {\n    const { lang, element, enableEscapedCharacter } = options\n    this.lang = lang\n    this.enableEscapedCharacter = enableEscapedCharacter\n    this.element = document.getElementById(element)\n  }\n\n  /* Using instance object to ignite the syntax highlighting */\n  ignite() {\n    const codeString = this.element.innerText\n\n    switch(this.lang) {\n      case 'python': ignitePythonCode(\n          this.element,\n          this.enableEscapedCharacter\n        );\n        break;\n\n      case 'ruby':   igniteRubyCode(this.element); break;\n      case 'html':   igniteHTMLCode(this.element); break;\n      default: console.warn(`${this.lang} lang currently is unsupported!`)\n    }\n  }\n\n  /* Alias method if ignite which is the verb 'ignite' in German */\n  entzünden() { this.ignite() }\n\n  /* Directly ignite the syntax highlighting using class method */\n  static ignite(options = {}) {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/leichter.js","const lexPython = require('./lexer/lex_python.js').lexPython\nconst parsePython = require('./parser/parse_python.js').parsePython\nconst className = 'lt'\n\nexport default function ignitePythonCode(element, enableEscapedCharacter = false) {\n  let codeString = element.innerText\n\n  /* Parse the code for the first time into fundamental tokens */\n  let lexedTokens = lexPython(codeString)\n\n  /* Secondary parse for complex combination syntax feature */\n  const tokens = parsePython(lexedTokens)\n\n  /* Parsing Python code highlighting */\n  element.innerText = ''\n  for (let token of tokens) {\n    let codeSegment = document.createElement('span')\n    codeSegment.className = `${className} ${className}-${token.type}`\n    codeSegment.innerText = token.value\n    element.appendChild(codeSegment)\n  }\n\n  /* Dynamically Parse Escaped Character Style */\n  if (enableEscapedCharacter) {\n    const stringElements = element.getElementsByClassName('lt-string')\n    for (let e of stringElements) {\n      let string = e.innerText, result = '', value = '', char\n      for (let i = 0, l = string.length; i < l; i++) {\n        let char = string[i]\n        if (char === '\\\\') {\n          if (value) {\n            result += value\n            value = ''\n          }\n          result += `<span class=\"lt lt-escaped-character\">${char + string[++i]}</span>`\n        } else value += char\n      }\n      if (value) result += value\n      e.innerHTML = result\n    }  \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ignition/ignite_python_code.js","const K = require('../keywords/python')\nimport { $charMap as M } from '../char_mapping/python'\n\nString.prototype.last = function() {\n  return this[this.length - 1]\n}\nArray.prototype.includes = function(item) {\n  return this.indexOf(item) !== -1\n}\n\nexport function lexPython(code) {\n  let currentChar = code[0]\n  let peekChar = code[1]\n  let charPosition = 0\n  let lexedValue = ''\n  let tokens = []\n\n  function readChar() {\n    charPosition++\n    currentChar = code[charPosition]\n    peekChar = code[charPosition + 1]\n  }\n\n  function readString() {\n    let lexedString = currentChar\n    readChar()\n\n    if (currentChar === lexedString[0] && peekChar === lexedString) {\n      /* Multi-line String Case */\n      lexedString += currentChar\n      readChar()\n      lexedString += currentChar\n      readChar()\n\n      let stringClosing = [lexedString[0], lexedString[0], lexedString[0]].join('')\n\n      while(currentChar && currentChar + peekChar + code[charPosition + 2] != stringClosing) {\n\n        /* Escaped Character Case */\n        if (currentChar === '\\\\') {\n          lexedString += currentChar\n          readChar()\n        }\n\n        lexedString += currentChar\n        readChar()\n      }\n\n      for(let i = 0; i < 3; i++) {\n        if (currentChar) {\n          lexedString += currentChar\n        } else break\n        readChar()\n      }\n    } else {\n      /* Single Line String Case */\n      while (currentChar != lexedString[0] && currentChar !== '\\n') {\n\n        /* Escaped Character Case */\n        if (currentChar === '\\\\') {\n          lexedString += currentChar\n          readChar()\n        }\n\n        lexedString += currentChar\n        readChar()\n      }\n\n      if (currentChar !== '\\n') {\n        /* Current charcacter is the closing string */\n        lexedString += currentChar\n        readChar()\n      }\n    }\n\n    /* Push String Token */\n    tokens.push({ type: 'string', value: lexedString })\n  }\n\n  function readSpace() {\n    let spaces = currentChar\n    readChar()\n\n    while (currentChar == ' ') {\n      spaces += ' '\n      readChar()\n    }\n\n    tokens.push({ type: 'space', value: spaces })\n  }\n\n  function readComment() {\n    let commentString = currentChar\n    readChar()\n\n    while (currentChar !== undefined && currentChar != '\\n') {\n      commentString += currentChar\n      readChar()\n    }\n\n    tokens.push({ type: 'comment', value: commentString })\n  }\n\n  function tokenizeLexedValue() {\n    if (lexedValue) {\n      for (let type of Object.keys(K)) {\n        if (K[type].includes(lexedValue)) {\n          tokens.push({ type: type.slice(1), value: lexedValue })\n          lexedValue = ''\n          break;\n        }\n      }\n\n      if (lexedValue) {\n        tokens.push({ type: 'default', value: lexedValue })\n        lexedValue = ''\n      }\n    }\n  }\n\n  /* Setting function as values in character mapping */\n  M.set(' ',  readSpace)\n  M.set('\"',  readString)\n  M.set('\\'', readString)\n  M.set('#',  readComment)\n\n  /* Start Lexing */\n  while (currentChar !== undefined) {\n\n    /* Maps to special character and convert into tokens */\n    if (M.has(currentChar)) {\n      tokenizeLexedValue();\n\n      let value = M.get(currentChar)\n      if (typeof value === 'string') {\n        tokens.push({ type: value, value: currentChar })\n        readChar()\n      } else if (typeof value === 'function') {\n        /* Call function for specific lexing method */\n        value()\n      } else {\n        console.log('Error')\n      }\n    }\n    /* Parse default identifier */\n    else {\n      lexedValue += currentChar\n      readChar()\n    }\n\n  }\n\n  if (lexedValue) tokenizeLexedValue()\n\n  return tokens\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ignition/lexer/lex_python.js","export const $charMap = new Map([\n  /* Implemented a readSpace function in python lexing */\n  [' ', 'READ_SPACE_FUNC'],\n\n  /* Implemented a readString function in python lexing */\n  ['\"', 'READ_STRING_FUNC'],\n  ['\\'', 'READ_STRING_FUNC'],\n\n  ['=', 'operator'],\n  ['+', 'operator'],\n  ['-', 'operator'],\n  ['*', 'operator'],\n  ['/', 'operator'],\n  ['%', 'operator'],\n  ['>', 'operator'],\n  ['<', 'operator'],\n  ['|', 'operator'],\n  ['&', 'operator'],\n  [':', 'colon'],\n  ['[', 'left-bracket'],\n  [']', 'right-bracket'],\n  ['(', 'left-parentheses'],\n  [')', 'right-parentheses'],\n  ['{', 'left-brace'],\n  ['}', 'right-brace'],\n  [',', 'comma'],\n  [';', 'semicolon'],\n  ['\\n', 'newline'],\n\n  /* Implement a readComment function in python lexing */\n  ['#', 'READ_COMMENT_FUNC'],\n])\n\nexport default $charMap\n\n\n// WEBPACK FOOTER //\n// ./lib/ignition/char_mapping/python.js","export const $keyword = ['as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'lambda', 'nonlocal', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']\nexport const $function = ['abs', 'dict', 'help', 'min', 'setattr', 'all', 'dir', 'hex', 'next', 'slice', 'any', 'divmod', 'id', 'object', 'sorted', 'ascii', 'enumerate', 'input', 'oct', 'staticmethod', 'bin', 'eval', 'int', 'open', 'str', 'bool', 'exec', 'isinstance', 'ord', 'sum', 'bytearray', 'filter', 'issubclass', 'pow', 'super', 'bytes', 'float', 'iter', 'print', 'tuple', 'callable', 'format', 'len', 'property', 'type', 'chr', 'frozenset', 'list', 'range', 'vars', 'classmethod', 'getattr', 'locals', 'repr', 'zip', 'compile', 'globals', 'map', 'reversed', '_import_', 'complex', 'hasattr', 'max', 'round', 'delattr', 'hash', 'memoryview', 'set']\nexport const $logical = ['and', 'or', 'not', 'in', 'is']\nexport const $boolean = ['False', 'True']\nexport const $nullity = ['None']\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ignition/keywords/python.js","/*\n * Python Parser\n * \n * Basically parser is for the parsing complex token combinations or types\n */\n\nexport function parsePython(tokens) {\n  let tokenPosition = 0\n  let currentToken = tokens[0]\n  let peekToken = tokens[1]\n\n  function nextToken() {\n    tokenPosition++\n    currentToken = tokens[tokenPosition]\n    peekToken = tokens[tokenPosition + 1]\n  }\n\n  function parseArray() {\n    while(currentToken && currentToken.type != 'right-bracket') {\n      if (currentToken.type === 'default' && !isNaN(currentToken.value)) {\n        currentToken.type = 'number'\n      }\n      nextToken()\n    }\n  }\n\n  function parseArgumentTokens() {\n    while (currentToken && !(currentToken.type === 'right-parentheses' && peekToken.type === 'colon')) {\n      if (currentToken.type === 'default') {\n        currentToken.type = 'argument'\n      } else if (currentToken.type === 'operator' && currentToken.value === '=') {\n        /* Argument with Default Value */\n        while (currentToken && currentToken.type !== 'comma') {\n          if (currentToken.type === 'default' && !isNaN(currentToken.value)) {\n            currentToken.type = 'number'\n          } else if (currentToken.type === 'left-bracket') {\n            parseArray()\n          }\n          nextToken()\n        }\n      }\n      nextToken()\n    }\n  }\n\n  while (currentToken) {\n    switch(currentToken.type) {\n      case 'keyword':\n        if (currentToken.value === 'def' && peekToken && peekToken.type === 'space') {\n          nextToken()\n          if (peekToken && peekToken.type === 'default') {\n            peekToken.type = 'function-name'\n          }\n        } else if (currentToken.value === 'class' && peekToken && peekToken.type === 'space') {\n          nextToken()\n          if (peekToken && peekToken.type === 'default') {\n            peekToken.type = 'class-name'\n          }\n        }\n        nextToken()\n        break;\n\n      case 'function-name':\n      case 'class-name':\n        if (peekToken && peekToken.type === 'left-parentheses') {\n          parseArgumentTokens()\n        }\n        break\n\n      case 'default':\n        if (!isNaN(currentToken.value)) {\n          currentToken.type = 'number'\n        }\n        nextToken()\n        break;\n\n      default:\n        nextToken()\n    }\n  }\n\n  return tokens\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ignition/parser/parse_python.js","const lexRuby = require('./lexer/lex_ruby.js').lexRuby\nconst parseRuby = require('./parser/parse_ruby.js').parseRuby\nconst className = 'lt'\n\nexport default function igniteRubyCode(element) {\n  let codeString = element.innerText\n\n  /* Parse the code for the first time into fundamental tokens */\n  let lexedTokens = lexRuby(codeString)\n\n  /* Secondary parse for complex combination syntax feature */\n  const tokens = parseRuby(lexedTokens)\n\n  /* Parsing Ruby code highlighting */\n  element.innerText = ''\n  for (let token of tokens) {\n    let codeSegment = document.createElement('span')\n    codeSegment.className = `${className} ${className}-${token.type}`\n    codeSegment.innerText = token.value\n    element.appendChild(codeSegment)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ignition/ignite_ruby_code.js","const $keywords = ['alias ', 'and', 'BEGIN', 'begin', 'break', 'case', 'class', 'def', 'defined?', 'do', 'else', 'elsif', 'END', 'end', 'ensure', 'false', 'for', 'if', 'in', 'module', 'next', 'nil', 'not', 'or', 'redo', 'rescue', 'retry', 'return', 'self', 'super', 'then', 'true', 'undef', 'unless', 'until', 'when', 'while', 'yield']\nconst $functions = ['include', 'using', 'public', 'private', 'define_method', 'irb_exit_org',  'default_src_encoding', 'irb_binding', 'sprintf', 'format',  'catch', 'throw', 'loop', 'block_given?', 'trace_var', 'untrace_var', 'at_exit', 'set_trace_func', 'caller', 'caller_locations', 'select', 'test', 'fork', '`', 'sleep', 'gem_original_require', 'respond_to_missing?', 'load', 'exec', 'exit!', 'system', 'spawn', 'abort', 'syscall', 'printf', 'open', 'putc', 'print', 'readline', 'puts', 'p', 'readlines', 'rand', 'gets', 'srand', 'proc', 'lambda', 'gem', 'initialize_copy', 'initialize_clone', 'initialize_dup', 'trap', 'require', 'require_relative', 'autoload', 'autoload?', 'binding', 'local_variables', 'warn', 'raise', 'fail', 'global_variables', '__method__', '__callee__', '__dir__', 'eval', 'iterator?', 'method_missing', 'singleton_method_added', 'singleton_method_removed', 'singleton_method_undefined', 'initialize']\n\nString.prototype.last = function() {\n  return this[this.length - 1]\n}\nArray.prototype.includes = function(item) {\n  return this.indexOf(item) !== -1\n}\n\nexport function lexRuby(code) {\n  let currentChar = code[0]\n  let peekChar = code[1]\n  let charPosition = 0\n  let lexedValue = ''\n  let tokens = []\n\n  function readChar() {\n    charPosition++\n    currentChar = code[charPosition]\n    peekChar = code[charPosition + 1]\n  }\n\n  function readString() {\n    let lexedString = currentChar\n    readChar()\n\n    /* Single Line String Case */\n    while (currentChar != lexedString[0] && currentChar !== '\\n') {\n      lexedString += currentChar\n      readChar()\n    }\n\n    if (currentChar !== '\\n') {\n      /* Current charcacter is the closing string */\n      lexedString += currentChar\n      readChar()\n    }\n\n    /* Push String Token */\n    tokens.push({ type: 'string', value: lexedString })\n  }\n\n  function readSpace() {\n    let spaces = currentChar\n    readChar()\n\n    while (currentChar == ' ') {\n      spaces += ' '\n      readChar()\n    }\n\n    tokens.push({ type: 'space', value: spaces })\n  }\n\n  function readComment() {\n    let commentString = currentChar\n    readChar()\n\n    while (currentChar !== undefined && currentChar != '\\n') {\n      commentString += currentChar\n      readChar()\n    }\n\n    tokens.push({ type: 'comment', value: commentString })\n  }\n\n  function tokenizeLexedValue() {\n    if (lexedValue) {\n      if ($keywords.includes(lexedValue)) {\n        tokens.push({ type: 'keyword', value: lexedValue })\n      } else if ($functions.includes(lexedValue)) {\n        tokens.push({ type: 'function', value: lexedValue })\n      } else {\n        tokens.push({ type: 'default', value: lexedValue })\n      }\n      lexedValue = ''\n    }\n  }\n\n  while (currentChar !== undefined) {\n    switch(currentChar) {\n      case ' ':\n        tokenizeLexedValue()\n        readSpace()\n        break;\n\n      case '\"':\n      case '\\'':\n        tokenizeLexedValue()\n        readString()\n        break;\n\n      case '=':\n      case '+':\n      case '-':\n      case '*':\n      case '/':\n      case '>':\n      case '<':\n      case '|':\n      case '&':\n        tokenizeLexedValue()\n        tokens.push({ type: 'operator', value: currentChar })\n        readChar()\n        break;\n\n      case ':':\n        tokenizeLexedValue()\n        tokens.push({ type: 'colon', value: ':' })\n        readChar()\n        break\n\n      case '[':\n        tokenizeLexedValue()\n        tokens.push({ type: 'left-bracket', value: '[' })\n        readChar()\n        break\n\n      case ']':\n        tokenizeLexedValue()\n        tokens.push({ type: 'right-bracket', value: ']' })\n        readChar()\n        break\n\n      case '(':\n        tokenizeLexedValue()\n        tokens.push({ type: 'left-parentheses', value: '(' })\n        readChar()\n        break\n\n      case ')':\n        tokenizeLexedValue()\n        tokens.push({ type: 'right-parentheses', value: ')' })\n        readChar()\n        break\n\n      case '{':\n        tokenizeLexedValue()\n        tokens.push({ type: 'left-brace', value: '{' })\n        readChar()\n        break\n  \n      case '}':\n        tokenizeLexedValue()\n        tokens.push({ type: 'right-brace', value: '}' })\n        readChar()\n        break\n\n      case ',':\n        tokenizeLexedValue()\n        tokens.push({ type: 'comma', value: ',' })\n        readChar()\n        break\n\n      case ';':\n        tokenizeLexedValue()\n        tokens.push({ type: 'semicolon', value: ':' })\n        readChar()\n        break\n\n      case '\\n':\n        tokenizeLexedValue()\n        tokens.push({ type: 'newline', value: '\\n' })\n        readChar()\n        break\n\n      case '#':\n        tokenizeLexedValue()\n        readComment()\n        break\n\n      default:\n        lexedValue += currentChar\n        readChar()\n    }\n  }\n\n  if (lexedValue) tokenizeLexedValue()\n\n  return tokens\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ignition/lexer/lex_ruby.js","/*\n * Ruby Parser\n * \n * Basically parser is for the parsing complex token combinations or types\n */\n\nexport function parseRuby(tokens) {\n  let tokenPosition = 0\n  let currentToken = tokens[0]\n  let peekToken = tokens[1]\n\n  function nextToken() {\n    tokenPosition++\n    currentToken = tokens[tokenPosition]\n    peekToken = tokens[tokenPosition + 1]\n    return currentToken\n  }\n\n  function peekTokenIs(type) {\n    return peekToken && peekToken.type === type\n  }\n\n  function tokenizeArguments() {\n    while (currentToken && ['right-parentheses', 'newline', 'semicolon'].indexOf(currentToken.type) === -1) {\n      if (currentToken.type === 'default') {\n        currentToken.type = 'argument'\n      }\n      nextToken()\n    }\n  }\n\n  function tokenizeClassScope() {\n    nextToken() /* Current token type is space */\n    if (peekTokenIs('default')) {\n      peekToken.type = 'class-name'\n\n      /* Match the Inheritance Pattern */\n      if (\n        nextToken() && peekTokenIs('space')    &&\n        nextToken() && peekTokenIs('operator') && peekToken.value === '<' &&\n        nextToken() && peekTokenIs('space')    &&\n        nextToken() && peekTokenIs('default')\n      ) {\n        peekToken.type = 'inherited-class'\n      }\n    }\n  }\n\n  function isGlobalVariable() {\n    return currentToken.value[0] === '$'\n  }\n\n  while (currentToken) {\n    switch(currentToken.type) {\n      case 'keyword':\n        if (currentToken.value === 'def' && peekTokenIs('space')) {\n          if (nextToken() && peekTokenIs('default')) {\n            peekToken.type = 'function-name'\n          }\n        } else if (currentToken.value === 'class' && peekTokenIs('space')) {\n          tokenizeClassScope()\n        }\n        nextToken()\n        break;\n\n      case 'function-name':\n        tokenizeArguments()\n        break\n\n      case 'default':\n        if (!isNaN(currentToken.value)) {\n          currentToken.type = 'number'\n        } else if (isGlobalVariable(currentToken)) {\n          currentToken.type = 'global-variable'\n        }\n        nextToken()\n        break;\n\n      default:\n        nextToken()\n    }\n  }\n\n  return tokens\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ignition/parser/parse_ruby.js","import lexHTML   from './lexer/lex_html.js'\nimport parseHTML from './parser/parse_html.js'\nconst className = 'lt'\n\nexport default function igniteHTMLCode(element, enableEscapedCharacter = false) {\n  let codeString = element.innerText\n\n  /* Parse the code for the first time into fundamental tokens */\n  let lexedTokens = lexHTML(codeString)\n\n  /* Secondary parse for complex combination syntax feature */\n  const tokens = parseHTML(lexedTokens)\n\n  /* Parsing HTML code highlighting */\n  element.innerText = ''\n  for (let token of tokens) {\n    let codeSegment = document.createElement('span')\n    if (token instanceof Array) {\n      /* Current token is a HTML tag */\n      codeSegment.className = `${className} ${className}-html-tag`\n      for (let innerToken of token) {\n        let innerCodeSegment = document.createElement('span')\n        innerCodeSegment.className = `${className} ${className}-${innerToken.type}`\n        innerCodeSegment.innerText = innerToken.value\n        codeSegment.appendChild(innerCodeSegment)\n      }\n    } else {\n      codeSegment.className = `${className} ${className}-${token.type}`\n      codeSegment.innerText = token.value\n    }\n    element.appendChild(codeSegment)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ignition/ignite_html_code.js","import { $charMap as M, $tagCharMap as TM } from '../char_mapping/html'\n\nString.prototype.last = function () {\n  return this[this.length - 1]\n}\nArray.prototype.includes = function (item) {\n  return this.indexOf(item) !== -1\n}\n\nexport default function lexHTML(code) {\n  let currentChar = code[0]\n  let peekChar = code[1]\n  let charPosition = 0\n  let lexedValue = ''\n  let tokens = []\n\n  function readChar() {\n    charPosition++\n    currentChar = code[charPosition]\n    peekChar = code[charPosition + 1]\n  }\n\n  function readString(targetTokenStack = tokens) {\n    let lexedString = currentChar\n    readChar()\n\n    /* Single Line String Case */\n    while (currentChar != lexedString[0] && currentChar !== '\\n') {\n      lexedString += currentChar\n      readChar()\n    }\n\n    if (currentChar !== '\\n') {\n      /* Current charcacter is the closing string */\n      lexedString += currentChar\n      readChar()\n    }\n\n    /* Push String Token */\n    targetTokenStack.push({ type: 'string', value: lexedString })\n  }\n\n  function readSpace(targetTokenStack = tokens) {\n    let spaces = currentChar\n    readChar()\n\n    while (currentChar == ' ') {\n      spaces += ' '\n      readChar()\n    }\n\n    targetTokenStack.push({ type: 'space', value: spaces })\n  }\n\n  /* Setting functions in tag char mapping */\n  TM.set(' ', readSpace)\n  TM.set('\"', readString)\n  TM.set('\\'', readString)\n\n  function readTag() {\n    /* For lexing HTML tags only */\n    let tagTokens = [{ type: 'left-angle-bracket', value: '<' }]\n    readChar()\n\n    while (currentChar !== undefined) {\n      /* End tag if current character is the closing bracket */\n      if (currentChar === '>') {\n        tokenizeLexedValue(tagTokens)\n        tagTokens.push({ type: 'right-angle-bracket', value: '>' })\n        readChar()\n        break\n      }\n\n      if (TM.has(currentChar)) {\n        tokenizeLexedValue(tagTokens)\n\n        let value = TM.get(currentChar)\n        if (typeof value === 'string') {\n          tagTokens.push({ type: value, value: currentChar })\n          readChar()\n        } else if (typeof value === 'function') {\n          /* Call function for specific lexing method */\n          value(tagTokens)\n        } else {\n          console.log('Error')\n        }\n      }\n      /* Parse default identifier */\n      else {\n        lexedValue += currentChar\n        readChar()\n      }\n    }\n\n    /* Push back to the main tokens stack */\n    tokens.push(tagTokens)\n  }\n\n  function tokenizeLexedValue(targetTokenStack = tokens) {\n    if (lexedValue) {\n      targetTokenStack.push({ type: 'default', value: lexedValue })\n      lexedValue = ''\n    }\n  }\n\n  /* Setting function as values in character mapping */\n  M.set(' ', readSpace)\n  M.set('<', readTag)\n\n  while (currentChar !== undefined) {\n\n    /* Maps to special character and convert into tokens */\n    if (M.has(currentChar)) {\n      tokenizeLexedValue();\n\n      let value = M.get(currentChar)\n      if (typeof value === 'string') {\n        tokens.push({ type: value, value: currentChar })\n        readChar()\n      } else if (typeof value === 'function') {\n        /* Call function for specific lexing method */\n        value()\n      } else {\n        console.log('Error')\n      }\n    }\n    /* Parse default identifier */\n    else {\n      lexedValue += currentChar\n      readChar()\n    }\n\n  }\n\n  if (lexedValue) tokenizeLexedValue()\n\n  return tokens\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ignition/lexer/lex_html.js","export const $charMap = new Map([\n  /* Implemented a readSpace function in HTML lexing */\n  [' ', 'READ_SPACE_FUNC'],\n\n  /* Implementad a raedTag function in HTML lexing */\n  ['<', 'READ_TAG_FUNC'],\n\n  ['\\n', 'newline'],\n])\n\nexport const $tagCharMap = new Map([\n  /* Implemented a readSpace function in HTML lexing */\n  [' ', 'READ_SPACE_FUNC'],\n\n  /* Implementad a raedString function in HTML lexing */\n  ['\"', 'READ_STRING_FUNC'],\n  ['\\'', 'READ_STRING_FUNC'],\n\n  ['=', 'assignment-operator'],\n  ['/', 'slash'],\n  ['\\n', 'newline'],\n])\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ignition/char_mapping/html.js","/*\n * HTML Parser\n * \n * Basically parser is for the parsing complex token combinations or types\n */\n\nimport { $tags as T } from '../keywords/html'\n\nArray.prototype.includes = function (item) {\n  return this.indexOf(item) !== -1\n}\n\nexport default function parseHTML(tokens) {\n  let tokenPosition = 0\n  let currentToken = tokens[0]\n  let peekToken = tokens[1]\n\n  function nextToken() {\n    tokenPosition++\n    currentToken = tokens[tokenPosition]\n    peekToken = tokens[tokenPosition + 1]\n  }\n\n  while (currentToken) {\n    /* Tag Level Parsing */\n    if (currentToken instanceof Array) {\n      for (let i = 0; i < currentToken.length; i++) {\n        let innerToken = currentToken[i]\n        let peekInnerToken = currentToken[i + 1]\n\n        switch(innerToken.type) {\n          case 'default':\n            innerToken.type = T.includes(innerToken.value) ? 'tag-name' : 'attribute'\n            break\n        }\n      }\n    }\n\n    nextToken()\n  }\n\n  return tokens\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ignition/parser/parse_html.js","export const $tags = [\n  \"a\",\n  \"abbr\",\n  \"address\",\n  \"area\",\n  \"article\",\n  \"aside\",\n  \"audio\",\n  \"b\",\n  \"base\",\n  \"bdi\",\n  \"bdo\",\n  \"blockquote\",\n  \"body\",\n  \"br\",\n  \"button\",\n  \"canvas\",\n  \"caption\",\n  \"cite\",\n  \"code\",\n  \"col\",\n  \"colgroup\",\n  \"data\",\n  \"datalist\",\n  \"dd\",\n  \"del\",\n  \"details\",\n  \"dfn\",\n  \"dialog\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"em\",\n  \"embed\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"footer\",\n  \"form\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"head\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"html\",\n  \"i\",\n  \"iframe\",\n  \"img\",\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"keygen\",\n  \"label\",\n  \"legend\",\n  \"li\",\n  \"link\",\n  \"main\",\n  \"map\",\n  \"mark\",\n  \"math\",\n  \"menu\",\n  \"menuitem\",\n  \"meta\",\n  \"meter\",\n  \"nav\",\n  \"noscript\",\n  \"object\",\n  \"ol\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"p\",\n  \"param\",\n  \"picture\",\n  \"pre\",\n  \"progress\",\n  \"q\",\n  \"rb\",\n  \"rp\",\n  \"rt\",\n  \"rtc\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"section\",\n  \"select\",\n  \"slot\",\n  \"small\",\n  \"source\",\n  \"span\",\n  \"strong\",\n  \"style\",\n  \"sub\",\n  \"summary\",\n  \"sup\",\n  \"svg\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"template\",\n  \"textarea\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"time\",\n  \"title\",\n  \"tr\",\n  \"track\",\n  \"u\",\n  \"ul\",\n  \"var\",\n  \"video\",\n  \"wbr\"\n]\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ignition/keywords/html.js","export function appendNode(element, params) {\n  /* Create child element */\n  const child = document.createElement(params.name)\n  child.className = params.classList.join(' ')\n  child.id = params.id\n\n  if (params.attributes) {\n    for (let key in params.attributes) {\n      child.setAttribute(key, params.attributes[key])\n    }  \n  }\n  \n  element.appendChild(child)\n\n  /* Append to grand child element */\n  if (params.children) {\n    for (let grandChildInfo of params.children) {\n      appendNode(child, grandChildInfo)\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/helpers/append_node.js"],"sourceRoot":""}